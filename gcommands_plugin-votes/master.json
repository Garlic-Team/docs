{"meta":{"version":"0.4.0","format":20,"date":1654458023007},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n    \n   # <img src=\"https://cdn.discordapp.com/avatars/834822955229380619/7d0142158babe0375e7cc633e87c06d4.png\" height=\"30\"> GCommands Plugin Votes\n   ### Official plugin for GCommands\n    \n  <br />\n  <p>\n    <a href=\"https://www.npmjs.com/package/@gcommands/plugin-votes\"><img src=\"https://nodei.co/npm/@gcommands/plugin-votes.png?downloads=true&stars=true\" alt=\"NPM Banner\"></a>\n    <br />\n    <a href=\"https://discord.gg/AjKJSBbGm2\"><img src=\"https://discord.com/api/guilds/833628077556367411/embed.png?style=banner2\" /></a>\n  </p>\n  <p>\n    <a href=\"https://ko-fi.com/H2H05FNRL\"><img src=\"https://img.shields.io/badge/Kofi-Donate-yellow?style=for-the-badge\" height=\"30\" /></a>\n    <a href=\"https://github.com/Garlic-Team/gcommands-addons\"><img src=\"https://img.shields.io/badge/Open-Source-blue?style=for-the-badge\" height=\"30\" /></a>\n    <img src=\"https://img.shields.io/badge/Made%20With-TypeScript-red?style=for-the-badge\" height=\"30\" />\n  </p>\n</div>\n\n---\n\n## Installation\n\nInstall with [npm](https://www.npmjs.com/) / [yarn](https://yarnpkg.com) / [pnpm](https://pnpm.js.org/):\n\n```sh\nnpm install @gcommands/plugin-votes\nyarn add @gcommands/plugin-votes\npnpm add @gcommands/plugin-votes\n```\n\n```js\n// index.js / LruCache Provider (recommended)\nconst { Plugins, GClient } = require('gcommands');\nconst { LruCacheProvider } = require('gcommands/dist/providers/LruCacheProvider');\n\nconst client = new GClient({\n    database: new LruCacheProvider({ max: 200, maxAge: 3600000 });\n})\n\nrequire('@gcommands/plugin-votes').default({\n    type: 'TOP.GG',\n    apiKeys: 'your top.gg authorization token',\n    serverAuthKey: 'random token for webhook'\n})\n\nPlugins.search(__dirname);\n\n// command.js\nconst { Command } = require('gcommands');\nconst { VoteInhibitor } = require('@gcommands/plugin-votes');\n\nnew Command({\n    inhibitors: [\n        new VoteInhibitor({\n            message: 'Your message if user must vote'\n        })\n    ]\n    ...params\n})\n```\n\n![topggimage](https://camo.githubusercontent.com/de589c73a4a72f855b595407134d890551d32b77fdd17b28409815b0c656ee2e/68747470733a2f2f692e696d6775722e636f6d2f77466c703448672e706e67)\n","path":"README.md"}}}},"classes":[{"name":"VoteInhibitor","extends":["Inhibitor"],"construct":{"name":"constructor","params":[{"name":"options","optional":true,"type":[[["InhibitorOptions"]]]}],"returns":[[["VoteInhibitor"]]]},"props":[{"name":"ephemeral","readonly":true,"type":[[["boolean"]]],"meta":{"line":9,"file":"Inhibitor.d.ts","path":"node_modules/gcommands/dist/inhibitors"}},{"name":"message","readonly":true,"type":[[["string"," | ("],["ctx",": "],["CommandContext","<"],["CacheType","> | "],["ComponentContext","<"],["CacheType",">) => "],["string"]]],"meta":{"line":8,"file":"Inhibitor.d.ts","path":"node_modules/gcommands/dist/inhibitors"}}],"methods":[{"name":"resolveMessage","params":[{"name":"ctx","optional":false,"type":[[["CommandContext","<"],["CacheType","> | "],["ComponentContext","<"],["CacheType",">"]]]}],"returns":[[["string"," | "],["void"]]],"meta":{"line":11,"file":"Inhibitor.d.ts","path":"node_modules/gcommands/dist/inhibitors"}},{"name":"run","params":[{"name":"ctx","optional":false,"type":[[["CommandContext","<"],["CacheType","> | "],["ComponentContext","<"],["CacheType",">"]]]}],"returns":[[["Promise","<"],["any",">"]]],"meta":{"line":4,"file":"VoteInhibitor.ts","path":"src/inhbitors"}}],"meta":{"line":3,"file":"VoteInhibitor.ts","path":"src/inhbitors"}},{"name":"VoteManager","construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]},{"name":"keys","optional":false,"type":[[["Array","<"],["Keys",">"]]]},{"name":"database","optional":false,"type":[[["unknown"]]]}],"returns":[[["VoteManager"]]],"meta":{"line":16,"file":"VoteManager.ts","path":"src/utils"}},"props":[{"name":"cache","type":[[["any"]]],"meta":{"line":14,"file":"VoteManager.ts","path":"src/utils"}},{"name":"client","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":8,"file":"VoteManager.ts","path":"src/utils"}},{"name":"dblToken","see":[],"abstract":false,"deprecated":true,"type":[[["string"]]],"meta":{"line":13,"file":"VoteManager.ts","path":"src/utils"}},{"name":"keys","type":[[["Array","<"],["Keys",">"]]],"meta":{"line":9,"file":"VoteManager.ts","path":"src/utils"}}],"methods":[{"name":"getFromCache","params":[{"name":"userId","optional":false,"type":[[["any"]]]}],"returns":[[["Promise","<"],["number"," | "],["boolean",">"]]],"meta":{"line":58,"file":"VoteManager.ts","path":"src/utils"}},{"name":"setToDatabase","params":[{"name":"userId","optional":false,"type":[[["any"]]]},{"name":"expire","optional":false,"type":[[["any"]]]}],"returns":[[["Promise","<"],["any",">"]]],"meta":{"line":74,"file":"VoteManager.ts","path":"src/utils"}},{"name":"voted","params":[{"name":"userId","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":28,"file":"VoteManager.ts","path":"src/utils"}}],"meta":{"line":7,"file":"VoteManager.ts","path":"src/utils"}}],"typedefs":[{"name":"Keys","meta":{"line":48,"file":"index.ts","path":"src"},"props":[{"name":"apiKey","optional":false,"type":[[["string"]]]},{"name":"listType","optional":false,"type":[[["ListTypes"]]]}]},{"name":"PluginVotesOptions","meta":{"line":8,"file":"index.ts","path":"src"},"props":[{"name":"apiKeys","description":"Your api key(s) for the list(s) you want to use.","optional":false,"type":[[["string"," | "],["Array","<"],["string",">"]]]},{"name":"database","description":"The database to use.","optional":true,"type":[[["any"]]]},{"name":"dblToken","optional":false,"type":[[["string"," | "],["Array","<"],["string",">"]]]},{"name":"listTypes","description":"Bot list type(s) you want to use.","optional":false,"type":[[["ListTypes"," | "],["Array","<"],["ListTypes",">"]]]},{"name":"port","description":"The port the webhook server will listen on.","optional":true,"type":[[["number"]]]},{"name":"serverAuthKey","description":"Authorization key for the webhook server.","optional":false,"type":[[["string"]]]},{"name":"type","optional":false,"type":[[["ListTypes"," | "],["Array","<"],["ListTypes",">"]]]},{"name":"webhookToken","optional":false,"type":[[["string"]]]}]},{"name":"ListTypes","type":[[["'TOP","."],["GG'"," | "],["'VoidBots'"]]],"meta":{"line":7,"file":"index.ts","path":"src"}}]}